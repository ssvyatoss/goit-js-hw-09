{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAE7B,OADoBC,KAAKC,SAAW,GAE3B,IAAIC,SAASC,IAClBC,YAAW,KACTD,EAAQ,C,SAACL,E,MAAUC,MAClBA,MAGE,IAAIG,SAAQ,CAACC,EAASE,KAC3BD,YAAW,KACTC,EAAO,C,SAACP,E,MAAUC,SAEnBA,GAfMO,SAASC,cAAc,SAmB/BC,iBAAiB,UAAUC,IAChCA,EAAGC,iBACH,MAAQC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IAAYL,EAAGM,cAEhD,IAAIC,EAAWC,OAAOL,EAAMM,OAC5BC,QAAQC,IAAIJ,GACZ,IAAIK,EAAWJ,OAAOJ,EAAKK,OAE3B,IAAK,IAAII,EAAI,EAAGA,EAAIR,EAAOI,MAAOI,IAEhCzB,EAAeyB,EAAI,EAAIN,GACtBO,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAqB5B,QAAeC,UAE/D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAoB9B,QAAeC,UAE7DiB,GAAYK","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({position, delay});\n        }, delay);\n      }); \n    } else {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          reject({position, delay});\n        })\n      }, delay); \n    }\n};\n\nformEl.addEventListener('submit', ev => {\n  ev.preventDefault();\n  const { elements: { delay, step, amount }} = ev.currentTarget;\n  \n  let delayNum = Number(delay.value);\n  console.log(delayNum);\n  let stepNum =  Number(step.value);\n\n  for (let i = 0; i < amount.value; i++) {\n\n    createPromise((i + 1), delayNum)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  })  \n  delayNum += stepNum;\n  }\n})\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","setTimeout","reject","document","querySelector","addEventListener","ev","preventDefault","elements","delay1","step","amount","currentTarget","delayNum","Number","value","console","log","stepNum","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.d6d7f5ca.js.map"}